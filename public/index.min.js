let dateDisplay, classDisplay, scheduleData, SCHEDULE_URL = "schedule.json", date = new Date, daysOfTheWeek = "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), monthsOfTheYear = "January February March April May June July August September October November December".split(" "), customBGEnabled = "true" == localStorage.getItem("custom-bg-enabled"), customBGURL = localStorage.getItem("custom-bg-url") ? localStorage.getItem("custom-bg-url") : "https://louie.co.nz/25th_hour/"; Date.prototype.getWeek = function () { let e = new Date(this.getFullYear(), 0, 1); return Math.ceil(((this - e) / 864e5 + e.getDay() + 1) / 7) }; let getCurrentClass = () => { if (!scheduleData) return; let e, t, n, o = scheduleData.bellSchedule, a = scheduleData.schedule; date.toLocaleTimeString("en-US", { hour: "numeric", minute: "numeric", hour12: !0 }); if (0 == date.getDay() || 6 == date.getDay()) return "it's the weekends, go have some fun! ðŸ“º"; if (60 * date.getHours() + date.getMinutes() < 510) return "school starts at 8:30 first class is " + a[(date.getWeek() % 3 + 1).toString()][date.getDay().toString()][0]; if (date.getHours() >= 21) return "go to sleep ðŸ’¤"; if (date.getHours() >= 14) return "school ended<br />go do homework and take a break! ðŸ“š"; for (let t = 0; t < o.length - 1; t++) { let n = o[t], a = parseInt(n[0]), d = parseInt(n[1]), l = o[t + 1], r = parseInt(l[0]), s = parseInt(l[1]), c = 60 * date.getHours() + date.getMinutes(); if (c >= 60 * a + d && c < 60 * r + s) { e = t + 1; break } } void 0 == e && (e = "error"); try { t = a[(date.getWeek() % 3 + 1).toString()][date.getDay().toString()][(e - 1).toString()] } catch (e) { return "an error occured: " + e } t || (t = "error"); try { n = 7 == e ? "out of school" : a[(date.getWeek() % 3 + 1).toString()][date.getDay().toString()][e.toString()] } catch (e) { n = "error see console for info", console.error(e) } return `Period ${e}  |  ${t}<br />-----<br />Next: ${n} @ ${new Date(`\n            ${date.getMonth()} ${date.getDate()} ${date.getFullYear()} \n            ${o[e][0]}:${o[e][1]}\n        `).toLocaleTimeString("en-us", { hour: "numeric", minute: "numeric" })}` }, pop = () => { let e = document.getElementById("party-popper"); e.style.top = "50%", setTimeout(() => { e.style.top = "150%" }, 2e3) }, update = () => { "14" == (date = new Date).getHours() && "0" == date.getMinutes() && "0" == date.getSeconds() && pop(), dateDisplay.innerHTML = `\n    \n    <strong>\n    ${monthsOfTheYear[date.getMonth()]} \n    ${date.getDate()}, \n    ${date.getFullYear()} <br>\n    </strong>\n\n    <span id='timeDisplay'>\n    ${daysOfTheWeek[date.getDay()]}  |  \n    ${date.toLocaleTimeString("en-US", { hour: "numeric", minute: "numeric", second: "numeric", hour12: !0 })}\n    </span>\n\n    `, classDisplay.innerHTML = `\n    Schedule week #${date.getWeek() % 3 + 1} <br />\n    ${getCurrentClass()}\n    ` }, loadData = () => { let e = new Headers; e.append("pragma", "no-cache"), e.append("cache-control", "no-cache"), fetch(SCHEDULE_URL, { headers: e }).then(e => { e.json().then(e => { classDisplay.innerHTML = "parsing data..", scheduleData = e }).catch(e => { classDisplay.innerHTML = "an error occurred :( <br>" + e, console.error(e) }) }).catch(e => { classDisplay.innerHTML = "an error occurred :( <br>" + e, console.error(e) }) }, darkMode = localStorage.getItem("theme"); window.addEventListener("load", () => { dateDisplay = document.getElementById("date"), classDisplay = document.getElementById("current-class"), loadData(), update(), setInterval(update, 500), document.getElementById("open-config").addEventListener("click", openConfigMenu), document.getElementById("dark-mode-toggle").addEventListener("click", darkModeToggle), "true" == darkMode && (document.getElementById("dark-mode-toggle").checked = !0, document.body.classList.remove("light"), document.body.classList.add("dark"), darkMode = !0); let e = document.getElementById("time-travel-button"), t = !1; e.addEventListener("click", n => { let o = document.getElementById("time-travel"); t ? t && (document.getElementById("open-config").style.display = "block", o.style.opacity = "0%", o.style.display = "none", e.innerHTML = "time travel!", t = !1) : (document.getElementById("open-config").style.display = "none", o.style.display = "block", o.style.opacity = "100%", e.innerHTML = "close", t = !0) }), document.getElementById("time-travel").addEventListener("submit", timeMachineHandler), document.getElementsByTagName("form")[0].children[1].value = monthsOfTheYear[date.getMonth()], document.getElementsByTagName("form")[0].children[5].value = date.getDate(), document.getElementsByTagName("form")[0].children[9].value = date.getFullYear(), document.getElementById("custom-bg-toggle").checked = customBGEnabled, document.getElementById("custom-bg-toggle").addEventListener("click", customBGHandler), document.getElementById("custom-bg-url").value = customBGURL, document.getElementById("custom-bg-url").addEventListener("change", customBGInputChange), customBGEnabled ? (document.getElementById("custom-bg").setAttribute("src", customBGURL), document.getElementById("custom-bg").style.display = "block", document.getElementById("custom-bg-url").removeAttribute("disabled")) : (document.getElementById("custom-bg").removeAttribute("src"), document.getElementById("custom-bg-url").setAttribute("disabled", "")) }); let menuOpen = !1, openConfigMenu = e => { let t = document.getElementById("config-menu"), n = document.getElementById("footer"); 0 == menuOpen ? (n.hidden = !0, t.style.display = "block", setTimeout(() => t.style.opacity = "100%", 100), menuOpen = !0) : 1 == menuOpen && (n.hidden = !1, t.style.opacity = "0%", setTimeout(() => t.style.display = "none", 100), menuOpen = !1) }, darkModeToggle = e => { let t = document.getElementById("dark-mode-toggle"); t.checked ? (document.body.classList.remove("light"), document.body.classList.add("dark"), darkMode = !0, localStorage.setItem("theme", !0)) : t.checked || (document.body.classList.remove("dark"), document.body.classList.add("light"), darkMode = !1, localStorage.setItem("theme", !1)) }, timeMachineHandler = e => { let t = document.getElementById("tt-results"); if (t.style.display = "block", !scheduleData) return void (t.innerHTML = "schedule data hasn't loaded yet, please wait"); let n = e.target, o = n[2], a = n[0], d = n[1], l = new Date(`${a.value} ${d.value} ${o.value}`); if (console.log(l), "Invalid Date" == l && (t.innerHTML = '\n        <h3 style="color: #FC5746">Inputted date was invalid :(</h3>\n        '), "0" == l.getDay() || "6" == l.getDay()) return void (t.innerHTML = "\n        <h3>Weekend</h3>\n        <p>No school</p>\n        "); let r = ""; scheduleData.schedule[(l.getWeek() % 3 + 1).toString()][l.getDay()].forEach((e, t) => { r += `<p>${++t}. ${e}</p>` }), t.innerHTML = `\n    <h3>Week ${(l.getWeek() % 3 + 1).toString()} ${daysOfTheWeek[l.getDay()]}</h3>\n    ${r}\n    ` }, customBGHandler = () => { customBGEnabled ? (localStorage.setItem("custom-bg-enabled", "false"), customBGEnabled = !1, document.getElementById("custom-bg").setAttribute("src", ""), document.getElementById("custom-bg").style.display = "none", document.getElementById("custom-bg-url").setAttribute("disabled", "")) : (localStorage.setItem("custom-bg-enabled", "true"), customBGEnabled = !0, document.getElementById("custom-bg").setAttribute("src", customBGURL), document.getElementById("custom-bg").style.display = "block", document.getElementById("custom-bg-url").removeAttribute("disabled")) }, customBGInputChange = e => { localStorage.setItem("custom-bg-url", e.target.value), document.getElementById("custom-bg").setAttribute("src", e.target.value) }, recommendCustomBG = () => { localStorage.setItem("custom-bg-url", "https://louie.co.nz/25th_hour/"), document.getElementById("custom-bg").setAttribute("src", "https://louie.co.nz/25th_hour/") };